?scale
install.packages(c('tidyverse', 'lubridate', 'rvest', 'stringr'))
install.packages(c('XML', 'xml2', 'openxlsx'))
install.packages('devtools')
install.packages(c('repr', 'IRdisplay', 'crayon', 'pbdZMQ', 'devtools'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()  # to register the kernel in the current R installation
install.packages(c('purrr', 'data.table', 'corrr', 'zoo', 'forecast'))
install_github("ggobi/ggally")
library(devtools)
install_github("ggobi/ggally")
devtools::install_github("slowkow/ggrepel")
install.packages('pander')
install.packages('xts')
install.packages('ggforce')
today()
Sys.Date()
library(httr)
library(jsonlite)
start_date <- Sys.Date()
# или
# start_date <- Sys.Date() - 100
####################################
## FUNCTION TO DOWNLOAD
####################################
get_cbonds_index <- function(index_group_id, index_type_id, start_date, limit = 100, operator = 'gt') {
connection_type <- 'get_index_value'
base_url <- paste0('https://rest.cbonds.info/services/json/', connection_type, '/?login=test&password=test&lang=rus&cache_all_revalidate=0&nocache_all=0')
body <- toJSON(fromJSON(paste0('{"auth":{"login":"test","password":"test"},"filters":[{"field":"index_group_id","operator":"eq","value":',
as.character(index_group_id), '},{"field":"type_id","operator":"eq","value":',
as.character(index_type_id), '},{"field":"date","operator":"',
operator, '","value":"',
start_date, '"}],"quantity":{"limit":',
as.character(limit), ',"offset":0},"sorting":[{"field":"date","order":"asc"}]}')),
pretty = TRUE)
res <- POST(base_url, encode = 'form', body = body)
content <- httr::content(res, as = "text")
content <- fromJSON(content)
if (content$count == 0) {
cat('Cbonds: There is no data available for current request.\nPlease, verify parameters:\nindex_group_id, index_type_id and start_date.')
return(0)
}
if (content$meta$user_id == 33) {
cat('Cbonds: Problems with server authentification.\nPlease, verify problem details with Cbonds Client Service:\nsnv@cbonds.info')
return(0)
}
else {
return(content$items)
}
}
ifx_ytm <- get_cbonds_index(index_group_id = 13, index_type_id = 10, start_date = '2017-01-31', limit = 100, operator = 'gt')
content$count
connection_type <- 'get_index_value'
base_url <- paste0('https://rest.cbonds.info/services/json/', connection_type, '/?login=test&password=test&lang=rus&cache_all_revalidate=0&nocache_all=0')
body <- toJSON(fromJSON(paste0('{"auth":{"login":"test","password":"test"},"filters":[{"field":"index_group_id","operator":"eq","value":',
as.character(index_group_id), '},{"field":"type_id","operator":"eq","value":',
as.character(index_type_id), '},{"field":"date","operator":"',
operator, '","value":"',
start_date, '"}],"quantity":{"limit":',
as.character(limit), ',"offset":0},"sorting":[{"field":"date","order":"asc"}]}')),
pretty = TRUE)
index_group_id = 13
index_type_id = 10
start_date = '2017-01-31'
limit = 100
operator = 'gt'
body <- toJSON(fromJSON(paste0('{"auth":{"login":"test","password":"test"},"filters":[{"field":"index_group_id","operator":"eq","value":',
as.character(index_group_id), '},{"field":"type_id","operator":"eq","value":',
as.character(index_type_id), '},{"field":"date","operator":"',
operator, '","value":"',
start_date, '"}],"quantity":{"limit":',
as.character(limit), ',"offset":0},"sorting":[{"field":"date","order":"asc"}]}')),
pretty = TRUE)
res <- POST(base_url, encode = 'form', body = body)
content <- httr::content(res, as = "text")
content <- fromJSON(content)
content$count
content$count == 0
get_cbonds_index <- function(index_group_id, index_type_id, start_date, limit = 100, operator = 'gt') {
connection_type <- 'get_index_value'
base_url <- paste0('https://rest.cbonds.info/services/json/', connection_type, '/?login=annapestova%40forecast.ru&password=cmasf2008&lang=rus&cache_all_revalidate=0&nocache_all=0')
body <- toJSON(fromJSON(paste0('{"auth":{"login":"annapestova@forecast.ru","password":"cmasf2008"},"filters":[{"field":"index_group_id","operator":"eq","value":',
as.character(index_group_id), '},{"field":"type_id","operator":"eq","value":',
as.character(index_type_id), '},{"field":"date","operator":"',
operator, '","value":"',
start_date, '"}],"quantity":{"limit":',
as.character(limit), ',"offset":0},"sorting":[{"field":"date","order":"asc"}]}')),
pretty = TRUE)
res <- POST(base_url, encode = 'form', body = body)
content <- httr::content(res, as = "text")
content <- fromJSON(content)
if (content$count == 0) {
cat('Cbonds: There is no data available for current request.\nPlease, verify parameters:\nindex_group_id, index_type_id and start_date.')
return(0)
}
if (content$meta$user_id == 33) {
cat('Cbonds: Problems with server authentification.\nPlease, verify problem details with Cbonds Client Service:\nsnv@cbonds.info')
return(0)
}
else {
return(content$items)
}
}
ifx_ytm <- get_cbonds_index(index_group_id = 13, index_type_id = 10, start_date = '2017-01-31', limit = 100, operator = 'gt')
rm(list = ls())
library(slidify)
library(slidifyLibraries)
setwd('~/GitHub/Progs/OpenData_March_2017')
slidify(index.Rmd)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')

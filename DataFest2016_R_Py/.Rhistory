install.packages('forecast')
library(depmixS4)
?install.packages
library(dplyr)
data(mtcars)
head(mtcars)
cpi_a <- cpi %>% group_by(am) %>% summarize(qsec_av = mean(qsec) cpi_max = max(qsec), cpi_min = min(qsec))
library(readr)
read_csv('C:\Users\User\Documents\Programming\R\R and Python')
read_csv('C:/Users/User/Documents/Programming/R/R and Python/cpi.csv')
cpi <- read_csv('C:/Users/User/Documents/Programming/R/R and Python/cpi.csv')
library(highcharter)
data(diamonds, mpg, package = "ggplot2")
hchart(mpg, "scatter", x = displ, y = hwy, group = class)
dsmax <- cpi %>%
mutate(color = colorize_vector(cpi_av, "A"),
y = cpi_max - cpi_min) %>%
select(x = country,
y,
name = country,
color,
mean = cpi_av,
max = cpi_max,
min = cpi_min) %>%
list.parse3()
dsmin <- cpi %>%
select(x = country, y = cpi_min) %>%
list.parse3()
# Some tooltips to make it a little *intercative*
x <- c("Min", "Mean", "Max")
y <- sprintf("{point.%s}", tolower(x))
tltip <- tooltip_table(x, y)
hc <- highchart() %>%
hc_chart(
type = "column",
polar = TRUE
) %>%
hc_plotOptions(
series = list(
stacking = "normal",
showInLegend = FALSE
)
) %>%
hc_xAxis(
categories = cpi$country
) %>%
hc_yAxis(
max = 15,
min = -5,
labels = list(format = "{value} C"),
showFirstLabel = FALSE
) %>%
hc_add_series(
data = dsmax
) %>%
hc_add_series(
data = dsmin,
color = "transparent",
enableMouseTracking = FALSE
) %>%
hc_add_theme(
hc_theme_smpl()
) %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = tltip
)
hc
dsmax <- cpi %>%
mutate(color = colorize(cpi_av, "A"),
y = cpi_max - cpi_min) %>%
select(x = country,
y,
name = country,
color,
mean = cpi_av,
max = cpi_max,
min = cpi_min) %>%
list.parse()
dsmin <- cpi %>%
select(x = country, y = cpi_min) %>%
list.parse()
# Some tooltips to make it a little *intercative*
x <- c("Min", "Mean", "Max")
y <- sprintf("{point.%s}", tolower(x))
tltip <- tooltip_table(x, y)
hc <- highchart() %>%
hc_chart(
type = "column",
polar = TRUE
) %>%
hc_plotOptions(
series = list(
stacking = "normal",
showInLegend = FALSE
)
) %>%
hc_xAxis(
categories = cpi$country
) %>%
hc_yAxis(
max = 15,
min = -5,
labels = list(format = "{value} C"),
showFirstLabel = FALSE
) %>%
hc_add_series(
data = dsmax
) %>%
hc_add_series(
data = dsmin,
color = "transparent",
enableMouseTracking = FALSE
) %>%
hc_add_theme(
hc_theme_smpl()
) %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = tltip
)
hc
?colorize
dsmax <- cpi %>%
mutate(color = colorize(cpi_av),
y = cpi_max - cpi_min) %>%
select(x = country,
y,
name = country,
color,
mean = cpi_av,
max = cpi_max,
min = cpi_min) %>%
list_parse()
dsmin <- cpi %>%
select(x = country, y = cpi_min) %>%
list_parse()
# Some tooltips to make it a little *intercative*
x <- c("Min", "Mean", "Max")
y <- sprintf("{point.%s}", tolower(x))
tltip <- tooltip_table(x, y)
hc <- highchart() %>%
hc_chart(
type = "column",
polar = TRUE
) %>%
hc_plotOptions(
series = list(
stacking = "normal",
showInLegend = FALSE
)
) %>%
hc_xAxis(
categories = cpi$country
) %>%
hc_yAxis(
max = 15,
min = -5,
labels = list(format = "{value} C"),
showFirstLabel = FALSE
) %>%
hc_add_series(
data = dsmax
) %>%
hc_add_series(
data = dsmin,
color = "transparent",
enableMouseTracking = FALSE
) %>%
hc_add_theme(
hc_theme_smpl()
) %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = tltip
)
hc
cpi
dsmax
dsmax <- cpi %>%
mutate(color = colorize(cpi_av),
y = cpi_max - cpi_min) %>%
select(x = country,
y,
name = country,
color,
mean = cpi_av,
max = cpi_max,
min = cpi_min) %>%
list_parse()
dsmin <- cpi %>%
select(x = country, y = cpi_min) %>%
list_parse()
# Some tooltips to make it a little *intercative*
x <- c("Min", "Mean", "Max")
tltip <- tooltip_table(x, y)
hc <- highchart() %>%
hc_chart(
type = "column",
polar = TRUE
) %>%
hc_plotOptions(
series = list(
stacking = "normal",
showInLegend = FALSE
)
) %>%
hc_xAxis(
categories = cpi$country
) %>%
hc_yAxis(
showFirstLabel = FALSE
) %>%
hc_add_series(
data = dsmax
) %>%
hc_add_series(
data = dsmin,
enableMouseTracking = FALSE
) %>%
hc_add_theme(
hc_theme_smpl()
) %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = tltip
)
hc
hc <- highchart() %>%
hc_chart(
type = "column",
polar = TRUE
) %>%
hc_plotOptions(
series = list(
stacking = "normal",
showInLegend = FALSE
)
) %>%
hc_xAxis(
categories = country
) %>%
hc_yAxis(
showFirstLabel = FALSE
) %>%
hc_add_series(
data = dsmax
) %>%
hc_add_series(
data = dsmin,
enableMouseTracking = FALSE
) %>%
hc_add_theme(
hc_theme_smpl()
) %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = tltip
)
hc
hc <- highchart() %>%
hc_chart(
type = "column",
polar = TRUE
) %>%
hc_plotOptions(
series = list(
stacking = "normal",
showInLegend = FALSE
)
) %>%
hc_yAxis(
showFirstLabel = FALSE
) %>%
hc_add_series(
data = dsmax
) %>%
hc_add_series(
data = dsmin,
enableMouseTracking = FALSE
) %>%
hc_add_theme(
hc_theme_smpl()
) %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = tltip
)
hc
library(slidify)
library(slidifyLibraries)
setwd('~GitHub/Progs/DataFest2016_R_Py')
getwd()
setwd('~/GitHub/Progs/DataFest2016_R_Py')
library(slidify)
library(slidifyLibraries)
slidify('index.Rmd')
source('~/Programming/R/R_code/functions/my_publish.R')
my_publish(repo = 'Progs', username = 'IrinaGoloshchapova', browse_URL = TRUE, folder = TRUE)
my_publish(repo = 'Progs', username = 'IrinaGoloshchapova', browse_URL = TRUE, folder = TRUE)
